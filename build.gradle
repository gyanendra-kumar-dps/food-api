// build.gradle
plugins {
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}
ext {
	set('testcontainers.version', "1.19.3")
}
ext['junit-jupiter.version'] = '5.10.2'
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
	google()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	compileOnly 'org.projectlombok:lombok:1.18.22'
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.testcontainers:testcontainers'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.testcontainers:junit-jupiter:1.19.8"
	testImplementation 'junit:junit:4.13.2'
	//testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
	testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.17.3'
	testImplementation(platform("org.junit:junit-bom:5.10.2"))
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}
test {
	useJUnitPlatform()
}
